{
  "algorithm_name": "CDNOD",
  "alpha": {
    "meaning": "Significance level in (0, 1)",
    "suggested_values": {
      "default": 0.05,
      "small_sample": 0.1,
      "large_sample": 0.01
    },
    "reasoning": "Adjust based on sample size, more conservative (lower) values for larger samples. If < 500, use 0.1; Else if 500-10000 (<10000 but >500), use 0.05; Else if > 10000, using 0.01."
  },
  "indep_test": {
    "meaning": "Independence test method",
    "suggested_values": {
      "default": "fisherz_cpu",
      "continuous_cpu": "fisherz_cpu",
      "continuous_gpu": "fisherz_gpu",
      "discrete_cpu": "chisq_cpu",
      "discrete_gpu": "chisq_gpu",
      "mixed_cpu": "gsq_cpu",
      "robust_nonlinear_cpu": "kci_cpu",
      "robust_nonlinear_gpu": "cmiknn_gpu",
      "fast_robust_nonlinear_cpu": "fastkci_cpu",
      "approximate_fast_nonlinear_cpu": "rcit_cpu"
    },
    "reasoning": "Choose based on data type and hardware. CPU TESTS: 'fisherz_cpu' for linear continuous data; 'chisq_cpu' for discrete data; 'gsq_cpu' for mixed data types; 'kci_cpu' for nonlinear data (very slow, use only with variable size < 15 and sample size < 1500); 'fastkci_cpu' is faster than kci (use with < 20 variables and sample size < 3000); 'rcit_cpu' is the fastest approximation of kci (use with < 30 variables and sample size < 5000). GPU TESTS: 'fisherz_gpu' and 'chisq_gpu' work similarly but are extremely fast because of GPU's super parallel computing; 'cmiknn_gpu' is a GPU-accelerated nonparametric test that provides 1000x speedup compared to CPU-based 'kci' with comparable accuracy. GPU acceleration is strongly recommended for large datasets."
  },
  "depth": {
    "meaning": "Maximum depth for skeleton search",
    "suggested_values": {
      "default": -1,
      "small_graph": 6,
      "medium_graph": 4,
      "large_graph": 2,
      "extra_large_graph": 1
    },
    "reasoning": "Use -1 for unlimited depth. For large graphs, limiting depth (e.g., 1-3) can significantly speed up the algorithm at the cost of some accuracy. A graph with node number < 10, use depth 6; A graph with node number 10 - 25, use depth 4; A graph with node number 25-50, use depth 2; A graph with node number > 50, use depth 1."
  },
  "device": {
    "meaning": "Computation device to use for independence tests",
    "suggested_values": {
      "default": "auto",
      "cpu": "cpu",
      "gpu": "cuda"
    },
    "reasoning": "Use 'auto' to automatically select GPU if available, otherwise CPU. Use 'cuda' to force GPU usage (requires compatible independence tests like 'cmiknn'). Use 'cpu' to force CPU usage. GPU acceleration can provide 10-100x speedup for nonlinear tests with large datasets."
  }
} 