{
    "algorithm_name": "PCParallel",
    "alpha": {
      "meaning": "Desired significance level in (0, 1)",
      "suggested_values": {
        "default": 0.05,
        "small_sample": 0.1,
        "large_sample": 0.01
      },
      "reasoning": "Adjust based on sample size, more conservative (lower) values for larger samples. If < 500, use 0.1; Else if 500-10000 (<10000 but >500), use 0.05; Else if > 10000, using 0.01."
    },
    "indep_test": {
      "meaning": "Independence test method",
      "suggested_values": {
        "default": "fisherz",
        "continuous": "fisherz",
        "discrete": "chi2",
        "mixed": "g2"
      },
      "reasoning": "Choose based on data type: 'fisherz' for linear continuous, 'chisq' for discrete, 'gsq' for simplied mixed data types."
    },
    "cores": {
      "meaning": "Number of available cores",
      "suggested_values": {
        "default": 1,
        "small_sample": 4,
        "large_sample": 16
      },
      "reasoning": "The number of available cores to run the algorithm on. 1 core is set as default. To be used based on available hardware. For values > 16, no significant speedup is observed"
    },
    "memory_efficient": {
      "meaning": "Use memory efficient version of the algo",
      "suggested_values": {
        "default": false,
        "large_sample": true
      },
      "reasoning": "The algorithm presents a memory speed tradeoff, and for very large sample size, set the value to true. About 50% reported memory usage efficiency"
    }
  } 