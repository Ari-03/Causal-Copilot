{
  "algorithm_name": "GES",
  "score_func": {
    "meaning": "Score function to be used",
    "available_values": {
      "default": "local_score_BIC",
      "BIC": "local_score_BIC",
      "BDeu": "local_score_BDeu",
      "marginal_general": "local_score_marginal_general",
      "marginal_multi": "local_score_marginal_multi"
    },
    "expert_suggestion": "Use 'local_score_BIC' for a good balance of fit and complexity for linear data. 'BDeu' for discrete data. local_score_marginal_general and marginal_multi are powerful for complex data such as nonlinear data but time-consuming. local_score_marginal_general leverages non-parametric generalized score and cross-validation to select the best model. local_score_marginal_multi leverages non-parametric generalized score and marginal likelihood to select the best model. Note [IMPORTANT]: local_score_marginal_general and local_score_marginal_multi are extremely slow. Only consider local_score_marginal_general if the variable size is less than 5. Do not consider local_score_marginal_multi since it is buggy now."
  },
  "maxP": {
    "meaning": "Allowed maximum number of parents when searching the graph",
    "available_values": {
      "default": null,
      "small_graph": 3,
      "medium_graph": 5,
      "large_graph": 7
    },
    "expert_suggestion": "For graphs with <10 nodes, use null (no limit) to explore all possibilities. For 10-25 nodes, limit maxP to 3. For 25-50 nodes, use maxP=5. For >50 nodes, use maxP=7 to reduce computational complexity. Each additional parent can increase runtime exponentially."
  }
} 